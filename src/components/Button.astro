---
import type { HTMLAttributes } from "astro/types";
// varieties of buttons
// 1. text
// 2. icon
// 3. icon + text

// customize button styles
// 1. size
// 2. theme: primary, secondary

interface Props extends HTMLAttributes<"button"> {
	mode?: "default" | "icon" | "icon-text";
	theme?: "primary" | "secondary";
}

const {
	class: className,
	mode = "default",
	theme = "primary",
	...rest
} = Astro.props;
---

<button
	class:list={["button", `button--${mode}`, `button--${theme}`, className]}
	{...rest}
>
	<slot />
</button>

<style is:global lang="scss">
	// acting as a reset class
	.button {
		cursor: pointer;
		display: flex;
		gap: 0.25rem;
		align-items: center;
		border: none;
		border-radius: var(--bdr-radius);
		transition: filter 0.2s ease-in-out;
		&:hover,
		&:focus-visible {
			filter: brightness(0.9);
		}
		&:active {
			filter: brightness(0.97);
		}
	}

	.button--default {
		padding: 0.5em 1.2em;
	}

	.button--icon {
		aspect-ratio: 1/1;
		padding: 0.6em;
	}

	.button--primary {
		background-color: var(--clr-sky-blue);
		color: var(--clr-text--light);
	}

	.button--secondary {
		background-color: var(--clr-magenta);
		color: var(--clr-text--light);
	}
</style>
